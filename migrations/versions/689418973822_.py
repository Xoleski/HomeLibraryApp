"""empty message

Revision ID: 689418973822
Revises: 7947495f75db
Create Date: 2024-05-21 20:38:09.265498

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import src
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '689418973822'
down_revision: Union[str, None] = '7947495f75db'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('books_private',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('title', sa.VARCHAR(length=128), nullable=False),
    sa.Column('slug', sa.VARCHAR(length=128), nullable=False),
    sa.Column('body', sa.VARCHAR(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default='now', nullable=False),
    sa.Column('is_published', sa.BOOLEAN(), server_default='false', nullable=False),
    sa.Column('picture', src.database.types.FileType(), nullable=True),
    sa.Column('category_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], onupdate='CASCADE', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('book_private_tags',
    sa.Column('tag_id', sa.INTEGER(), nullable=False),
    sa.Column('book_private_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['book_private_id'], ['books_private.id'], onupdate='CASCADE', ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], onupdate='CASCADE', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('tag_id', 'book_private_id')
    )
    op.drop_table('article_tags')
    op.drop_table('articles')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('articles',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('articles_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('slug', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('body', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text("'2024-05-14 14:19:11.900847'::timestamp without time zone"), autoincrement=False, nullable=False),
    sa.Column('is_published', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('picture', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name='articles_category_id_fkey', onupdate='CASCADE', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name='articles_pkey'),
    sa.UniqueConstraint('slug', name='articles_slug_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('article_tags',
    sa.Column('tag_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('article_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['article_id'], ['articles.id'], name='article_tags_article_id_fkey', onupdate='CASCADE', ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], name='article_tags_tag_id_fkey', onupdate='CASCADE', ondelete='RESTRICT')
    )
    op.drop_table('book_private_tags')
    op.drop_table('books_private')
    # ### end Alembic commands ###
